// ========================================================
// Functions
// ========================================================

// Convert hsb(a) colour to hsl(a)
@function hsb($h-hsb, $s-hsb, $b-hsb, $a: 1) {
  @if $b-hsb == 0 {
    @return hsla(0, 0, 0, $a);
  }

  @else {
    $l-hsl: ($b-hsb / 2) * (2 - ($s-hsb / 100));
    $s-hsl: ($b-hsb * $s-hsb) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2);

    @return hsla($h-hsb, $s-hsl, $l-hsl, $a);
  }
}

// Returns $value as a unitless number
//
// e.g. strip-unit(10px) => 10
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// Returns a $pixel value in rems
//
// e.g. pxem(10px) => 0.625rem
@function rem($pixels) {
  $size: $pixels / 16px;

  @return #{$size}rem;
}
