// ========================================================
// Mixins
// ========================================================

// Visually hide content
@mixin u--visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
}

// Clearfix
@mixin l--clearfix {
  &::before,
  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

// Container
@mixin l--container {
  margin-right: 1rem;
  margin-left: 1rem;

  @media screen and (min-width: $__breakpoint-small) {
    margin-right: 2rem;
    margin-left: 2rem;
  }

  @media screen and (min-width: $__breakpoint-large) {
    margin-right: 15vw;
    margin-left: 15vw;
  }
}

@mixin l--container-extend {
  margin-right: -1rem;
  margin-left: -1rem;

  @media screen and (min-width: $__breakpoint-small) {
    margin-right: -2rem;
    margin-left: -2rem;
  }

  @media screen and (min-width: $__breakpoint-large) {
    max-width: 100vw;
    margin-right: -15vw;
    margin-left: -15vw;
  }
}

// Fluid typography increases its size based on viewport
// https://css-tricks.com/snippets/css/fluid-typography/
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

// Typeset
@mixin typeset($preset, $line-height: null, $font-weight: null) {
  @if $preset == "label" {
    font-family: $__font-family-sans;
    font-size: $__font-size-text-small;
    font-weight: if($font-weight, $font-weight, normal);
    font-variant: proportional-nums;
    line-height: if($line-height, $line-height, $__line-height-baseline);
  }

  @else if $preset == "caption" {
    font-family: $__font-family-sans;
    font-size: $__font-size-text-xsmall;
    font-variant: common-ligatures oldstyle-nums;
    line-height: if($line-height, $line-height, $__line-height-default);
    hanging-punctuation: first;
    hyphens: auto;
  }

  @else if $preset == "prose" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-large,
      $__font-size-text-medium,
      $__font-size-text-xlarge
    );
    font-family: $__font-family-serif;
    font-variant: common-ligatures oldstyle-nums;
    line-height: if($line-height, $line-height, $__line-height-loose);
    hanging-punctuation: first;
    hyphens: auto;
  }

  @else if $preset == "text" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-medium,
      $__font-size-text-xsmall,
      $__font-size-text-small
    );
    font-family: $__font-family-serif;
    font-variant: common-ligatures oldstyle-nums;
    line-height: if($line-height, $line-height, $__line-height-loose);
    hanging-punctuation: first;
    hyphens: auto;
  }

  @else if $preset == "title" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-medium,
      $__font-size-display-small,
      $__font-size-display-large
    );
    font-family: $__font-family-slab;
    font-weight: bold;
    font-variant: common-ligatures discretionary-ligatures proportional-nums;
    line-height: if($line-height, $line-height, $__line-height-default);
    text-rendering: optimizeLegibility;
  }

  @else if $preset == "heading" {
    font-family: $__font-family-slab;
    font-size: $__font-size-display-small;
    font-weight: bold;
    font-variant: common-ligatures discretionary-ligatures proportional-nums;
    line-height: if($line-height, $line-height, $__line-height-default);
    text-rendering: optimizeLegibility;
  }

  @else if $preset == "display1" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-medium,
      $__font-size-display-medium,
      $__font-size-display-large
    );
    font-family: $__font-family-block;
    line-height: if($line-height, $line-height, $__line-height-reset);
    text-rendering: optimizeLegibility;
    text-transform: uppercase;
  }

  @else if $preset == "display2" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-medium,
      $__font-size-display-small,
      $__font-size-display-medium
    );
    font-family: $__font-family-block;
    line-height: if($line-height, $line-height, $__line-height-reset);
    text-rendering: optimizeLegibility;
    text-transform: uppercase;
  }

  @else if $preset == "display3" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-medium,
      $__font-size-text-large,
      $__font-size-display-small
    );
    font-family: $__font-family-block;
    line-height: if($line-height, $line-height, $__line-height-reset);
    text-rendering: optimizeLegibility;
    text-transform: uppercase;
  }

  @else if $preset == "poster" {
    @include fluid-type(
      $__breakpoint-xsmall,
      $__breakpoint-medium,
      $__font-size-display-large,
      $__font-size-poster-small
    );
    font-family: $__font-family-block;
    line-height: if($line-height, $line-height, $__line-height-reset);
    text-rendering: optimizeLegibility;
    text-transform: uppercase;
  }

  @else {
    @warn "The preset '#{$preset}' is not recognised";
  }
}
